<krpano >
    <plugin name="soundinterface" url.flash="%SWFPATH%/plugins/soundinterface.swf" url.html5="%SWFPATH%/plugins/soundinterface.js" preload="true" rootpath="%SWFPATH%/sound/" volume="1.0" mute="false"/>
    	
	<events name="sound_events" keep="true" onnewpano="check_sound(get(scene[get(xml.scene)].music));" />
	
	<action name="check_sound" scope="local" args="music" >
		if(global.nowplaying == 'null', set(global.nowplaying, get(scene[get(xml.scene)].music); ););		
		if(music != nowplaying, 
			stopsound(get(nowplaying));
			playsound(get(music), calc(music + '.mp3|' + music + '.ogg'), 0);
			copy(global.nowplaying, music);
		);
	</action>

	<!--
		do_crop_animation(framewidth, frameheight, framerate)
		- animation by changing the image cropping
		- parameters:
		  - framewidth - the width from one frame in pixels
		  - frameheight - the height from one frame in pixels
		  - framerate - the animation frame rate in 'frames per second'
		- the image can be a vertical or horizontal (or both) image-strip / sprite-sheet
		- the action will loop automatically through all frames from left to right and top to bottom
	-->
	<action name="do_crop_animation" scope="local" args="framewidth, frameheight, framerate">
		<!-- define local variables -->
		calc(local.xframes, (caller.imagewidth /framewidth) BOR 0);
		calc(local.frames, xframes * ((caller.imageheight / frameheight) BOR 0));
		def(local.frame, integer, 0);
		
		<!-- set the first frame -->
		calc(caller.crop, '0|0|' + framewidth + '|' + frameheight);
		
		<!-- do the animation -->
		setinterval(calc('crop_anim_' + caller.name), calc(1.0 / framerate),
			if(caller.loaded,
				inc(frame);
				if(frame GE frames, if(caller.onlastframe !== null, callwith(caller, onlastframe() ) ); set(frame,0); );
				mod(xpos, frame, xframes);
				div(ypos, frame, xframes);
				Math.floor(ypos);
				mul(xpos, framewidth);
				mul(ypos, frameheight);
				calc(caller.crop, xpos + '|' + ypos + '|' + framewidth + '|' + frameheight);
			  ,
				<!-- stop the interval when the hotspot gets removed -->
				clearinterval(calc('crop_anim_' + caller.name));
			);
		);
	</action>
<!-- <hotspot name="spot1" url="animatedhotspot_white.png" onloaded="do_crop_animation(64,64, 60);"   ath="-15" atv="-12" onclick="looktohotspot(get(name),65);" /> -->

<action name="calc_pos_from_hfov_yaw_pitch_roll">
  div(hfov,%1,57.295779);
  div(yaw,%2,-57.295779);
  div(pitch,%3,57.295779);
  div(roll,%4,-57.295779);
  mul(hfov,0.5);Math.tan(hfov);mul(width,hfov,1000);set(height,'prop');
  Math.cos(ch,yaw);Math.sin(sh,yaw);
  Math.cos(ca,pitch);Math.sin(sa,pitch);
  Math.cos(cb,roll);Math.sin(sb,roll);
  mul(m0,ca,ch);
  mul(tmp,cb,sa);mul(tmp,ch);mul(tmp2,sb,sh);add(m3,tmp,tmp2);
  mul(m4,cb,ca);
  mul(tmp,cb,sa);mul(tmp,sh);mul(tmp2,sb,ch);sub(m5n,tmp,tmp2);mul(m5n,-1);
  mul(tmp,sb,sa);mul(tmp,ch);mul(tmp2,cb,sh);sub(m6n,tmp,tmp2);mul(m6n,-1);
  Math.atan2(yaw,m6n,m0);
  Math.atan2(roll,m5n,m4);
  Math.asin(pitch,m3);
  mul(ath,yaw,57.295779);
  mul(atv,pitch,57.295779);
  mul(rotate,roll,57.295779);
</action>

<!-- <hotspot name="spotNNN"
         url="pool_extract.jpg" 
         distorted="true"
         onloaded="calc_pos_from_hfov_yaw_pitch_roll(150, -90, -4, -30);"
         ...
         /> -->

</krpano>
